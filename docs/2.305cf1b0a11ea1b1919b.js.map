{"version":3,"sources":["webpack:///./src/app/shared/components/user-profile-preview/user-profile-preview.component.ts","webpack:///./src/app/shared/components/user-profile-preview/user-profile-preview.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/shared/components/user-profile-preview/user-profile-preview.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/shared/components/user-profile-preview/user-profile-preview.component.html","webpack:///./src/app/shared/components/user-profile-preview/user-profile-preview.module.ts","webpack:///./node_modules/@angular/material/tooltip/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/tooltip/typings/index.d.ts.TooltipComponent.html","webpack:///./node_modules/@angular/material/esm5/tooltip.es5.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/Immediate.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/asap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/cdk/esm5/layout.es5.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js.pre-build-optimizer.js"],"names":["__webpack_require__","d","__webpack_exports__","UserProfilePreviewComponent","_global_constants__WEBPACK_IMPORTED_MODULE_0__","httpService","this","loaderSize","small","prototype","ngOnInit","user$","getUser","userRef","$","tooltip","RenderType_UserProfilePreviewComponent","View_UserProfilePreviewComponent_0","core","encapsulation","styles","data","View_UserProfilePreviewComponent_2","_l","_ck","_v","_co","component","currVal_0","parent","membership","date","View_UserProfilePreviewComponent_1","loader_component_ngfactory","loader_component","mainSize","mainCondition","withLogo","fade","common","ngIf","context","profilePicLocation","firstName","isEventCreator","klass","ngClass","event-creator","currVal_2","transform","UserProfilePreviewModule","TooltipComponentNgFactory","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_1__","_angular_common__WEBPACK_IMPORTED_MODULE_2__","_angular_cdk_layout__WEBPACK_IMPORTED_MODULE_12__","RenderType_TooltipComponent","animation","type","name","definitions","opacity","offset","options","undefined","expr","steps","timings","View_TooltipComponent_0","en","$event","ad","_animationStart","_animationDone","tooltipClass","tmp_0_0","_isHandset","matches","_visibility","message","View_TooltipComponent_Host_0","_handleBodyInteraction","MatTooltipModule","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_SCROLL_STRATEGY","TooltipComponent","_angular_cdk_layout__WEBPACK_IMPORTED_MODULE_4__","_angular_core__WEBPACK_IMPORTED_MODULE_9__","rxjs__WEBPACK_IMPORTED_MODULE_10__","SCROLL_THROTTLE_MS","overlay","scrollStrategies","reposition","scrollThrottle","_changeDetectorRef","_breakpointObserver","_closeOnInteraction","_onHide","observe","Handset","show","delay","_this","_hideTimeoutId","clearTimeout","_showTimeoutId","setTimeout","_markForCheck","hide","afterHidden","asObservable","isVisible","event","toState","next","markForCheck","nextHandle","tasksByHandle","AsapAction_AsapAction","_super","AsapAction","scheduler","work","call","tslib_es6","requestAsyncId","id","actions","push","scheduled","cb","flush","bind","handle","Promise","resolve","then","runIfPresent","recycleAsyncId","length","asap","AsapScheduler","apply","arguments","action","active","error","index","count","shift","execute","state","unsubscribe","layout_es5_BreakpointObserver","Breakpoints","mediaQueryStyleNode","mediaQueriesForWebkitCompatibility","Set","layout_es5_MediaMatcher","MediaMatcher","platform","_matchMedia","isBrowser","window","matchMedia","noopMatchMedia","query","WEBKIT","has","document","createElement","setAttribute","appendChild","sheet","insertRule","add","e","console","createEmptyStyleRule","ngInjectableDef","Object","factory","platform_es5","token","providedIn","media","addListener","removeListener","BreakpointObserver","mediaMatcher","zone","_queries","Map","_destroySubject","Subject","ngOnDestroy","complete","isMatched","value","splitQueries","coercion_es5","some","mediaQuery","_registerQuery","mql","observables","map","observable","combineLatest","pipe","debounceTime","breakpointStates","response","breakpoints","forEach","get","queryListener","output","fromEventPattern","addHandler","removeHandler","resultSelector","args","isArray","Observable","subscriber","retValue","handler","_i","err","isFunction","listener","run","startWith","nextMql","takeUntil","set","queries","split","reduce","a1","a2","concat","trim","XSmall","Small","Medium","Large","XLarge","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape"],"mappings":"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","file":"2.305cf1b0a11ea1b1919b.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { HttpService } from '../../../core/http/http.service';\nimport { Membership } from '../../models/membership';\nimport { LoaderSize } from '../../global/constants';\nimport { Observable } from 'rxjs';\n\ndeclare const $: any;\n@Component({\n  selector: 'user-profile-preview',\n  templateUrl: './user-profile-preview.component.html',\n  styleUrls: ['./user-profile-preview.scss']\n})\n\nexport class UserProfilePreviewComponent implements OnInit {\n\n  @Input()\n  userRef: string;\n  @Input()\n  isEventCreator: boolean;\n  @Input()\n  membership: Membership;\n  user$: Observable<User>;\n  loaderSize = LoaderSize.small;\n\n  constructor(private httpService: HttpService) {\n  }\n\n  ngOnInit() {\n    this.user$ = this.httpService.getUser(this.userRef);\n    $(() => {\n      $('.event-creator').tooltip();\n    });\n  }\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".user-profile[_ngcontent-%COMP%]{text-align:center;display:inline-block;margin:55px 15px 10px}.user-profile[_ngcontent-%COMP%]   .user-body[_ngcontent-%COMP%]{margin-top:10px}.user-profile[_ngcontent-%COMP%]   .group-user-additional[_ngcontent-%COMP%]{color:#008b8b;margin-top:-8px;font-size:11px}.user-profile[_ngcontent-%COMP%]   .user-name[_ngcontent-%COMP%]{margin-top:-3px}.user-profile[_ngcontent-%COMP%]   .user-avatar[_ngcontent-%COMP%]{margin:-50px auto 0;border-radius:50%;overflow:hidden;padding:0;max-width:90px;max-height:90px;width:90px;height:90px}.user-profile[_ngcontent-%COMP%]   .user-avatar[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:auto}.event-creator[_ngcontent-%COMP%]{font-weight:700}\"];\nexport { styles as styles };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./user-profile-preview.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../core/loader/loader.component.ngfactory\";\nimport * as i3 from \"../../../core/loader/loader.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./user-profile-preview.component\";\nimport * as i6 from \"../../../core/http/http.service\";\nvar styles_UserProfilePreviewComponent = [i0.styles];\nvar RenderType_UserProfilePreviewComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_UserProfilePreviewComponent, data: {} });\nexport { RenderType_UserProfilePreviewComponent as RenderType_UserProfilePreviewComponent };\nfunction View_UserProfilePreviewComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"group-user-additional\"]], null, null, null, null, null)), (_l()(), i1.ɵted(1, null, [\"Joined on \", \"\"])), i1.ɵppd(2, 1)], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = i1.ɵunv(_v, 1, 0, _ck(_v, 2, 0, i1.ɵnov(_v.parent.parent, 0), _co.membership.date)); _ck(_v, 1, 0, currVal_0); }); }\nfunction View_UserProfilePreviewComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 9, null, null, null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 3, \"div\", [[\"class\", \"user-avatar\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 1, \"loader\", [], null, null, null, i2.View_LoaderComponent_0, i2.RenderType_LoaderComponent)), i1.ɵdid(3, 49152, null, 0, i3.LoaderComponent, [], { mainSize: [0, \"mainSize\"], mainCondition: [1, \"mainCondition\"], withLogo: [2, \"withLogo\"], fade: [3, \"fade\"] }, null), (_l()(), i1.ɵeld(4, 0, null, null, 0, \"img\", [], [[8, \"src\", 4]], null, null, null, null)), (_l()(), i1.ɵeld(5, 0, null, null, 4, \"div\", [[\"class\", \"user-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 1, \"div\", [[\"class\", \"user-name\"]], null, null, null, null, null)), (_l()(), i1.ɵted(7, null, [\"\", \" \", \"\"])), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_UserProfilePreviewComponent_2)), i1.ɵdid(9, 16384, null, 0, i4.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.loaderSize; var currVal_1 = !_v.context.ngIf.profilePicLocation; var currVal_2 = false; var currVal_3 = true; _ck(_v, 3, 0, currVal_0, currVal_1, currVal_2, currVal_3); var currVal_7 = _co.membership; _ck(_v, 9, 0, currVal_7); }, function (_ck, _v) { var _co = _v.component; var currVal_4 = i1.ɵinlineInterpolate(1, \"\", _v.context.ngIf.profilePicLocation, \"\"); _ck(_v, 4, 0, currVal_4); var currVal_5 = _v.context.ngIf.firstName; var currVal_6 = (_co.isEventCreator ? \"\\uD83D\\uDC51\" : \"\"); _ck(_v, 7, 0, currVal_5, currVal_6); }); }\nexport function View_UserProfilePreviewComponent_0(_l) { return i1.ɵvid(0, [i1.ɵpid(0, i4.DatePipe, [i1.LOCALE_ID]), (_l()(), i1.ɵeld(1, 0, null, null, 6, \"div\", [[\"class\", \"d-inline-block\"], [\"data-placement\", \"top\"]], [[8, \"title\", 0]], null, null, null, null)), i1.ɵdid(2, 278528, null, 0, i4.NgClass, [i1.IterableDiffers, i1.KeyValueDiffers, i1.ElementRef, i1.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i1.ɵpod(3, { \"event-creator\": 0 }), (_l()(), i1.ɵeld(4, 0, null, null, 3, \"div\", [[\"class\", \"user-profile\"]], null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 2, null, View_UserProfilePreviewComponent_1)), i1.ɵdid(6, 16384, null, 0, i4.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), i1.ɵpid(131072, i4.AsyncPipe, [i1.ChangeDetectorRef])], function (_ck, _v) { var _co = _v.component; var currVal_1 = \"d-inline-block\"; var currVal_2 = _ck(_v, 3, 0, _co.isEventCreator); _ck(_v, 2, 0, currVal_1, currVal_2); var currVal_3 = i1.ɵunv(_v, 6, 0, i1.ɵnov(_v, 7).transform(_co.user$)); _ck(_v, 6, 0, currVal_3); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = i1.ɵinlineInterpolate(1, \"\", (_co.isEventCreator ? \"Organizer\" : \"\"), \"\"); _ck(_v, 1, 0, currVal_0); }); }\nexport function View_UserProfilePreviewComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"user-profile-preview\", [], null, null, null, View_UserProfilePreviewComponent_0, RenderType_UserProfilePreviewComponent)), i1.ɵdid(1, 114688, null, 0, i5.UserProfilePreviewComponent, [i6.HttpService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar UserProfilePreviewComponentNgFactory = i1.ɵccf(\"user-profile-preview\", i5.UserProfilePreviewComponent, View_UserProfilePreviewComponent_Host_0, { userRef: \"userRef\", isEventCreator: \"isEventCreator\", membership: \"membership\" }, {}, []);\nexport { UserProfilePreviewComponentNgFactory as UserProfilePreviewComponentNgFactory };\n","<div [ngClass]=\"{'event-creator': isEventCreator}\"\n     class=\"d-inline-block\"\n     data-placement=\"top\"\n     i18n-title title=\"{{ isEventCreator ? 'Organizer' : ''}}\">\n  <div class=\"user-profile\">\n    <ng-container *ngIf=\"user$ | async as user\">\n      <div class=\"user-avatar\">\n        <loader [mainCondition]=!user.profilePicLocation\n                [fade]=true\n                [withLogo]=false\n                [mainSize]=loaderSize></loader>\n        <img src={{user.profilePicLocation}}/>\n      </div>\n      <div class=\"user-body\">\n        <div class=\"user-name\">{{user.firstName}} {{isEventCreator ? '👑' : ''}}</div>\n        <div *ngIf=\"membership\" class=\"group-user-additional\" i18n=\"@@joined-on\">Joined\n          on {{membership.date | date}}</div>\n      </div>\n    </ng-container>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { UserProfilePreviewComponent } from './user-profile-preview.component';\nimport { CommonModule } from '@angular/common';\nimport { LoaderModule } from '../../../core/loader/loader.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LoaderModule\n  ],\n  declarations: [\n    UserProfilePreviewComponent\n  ],\n  providers: [],\n  exports: [UserProfilePreviewComponent]\n})\nexport class UserProfilePreviewModule {\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/tooltip\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/observers\";\nimport * as i4 from \"@angular/cdk/overlay\";\nimport * as i5 from \"@angular/cdk/bidi\";\nimport * as i6 from \"@angular/platform-browser\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@angular/cdk/platform\";\nimport * as i9 from \"@angular/cdk/a11y\";\nimport * as i10 from \"@angular/cdk/portal\";\nimport * as i11 from \"@angular/cdk/scrolling\";\nimport * as i12 from \"@angular/cdk/layout\";\nvar MatTooltipModuleNgFactory = i0.ɵcmf(i1.MatTooltipModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [TooltipComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i3.MutationObserverFactory, i3.MutationObserverFactory, []), i0.ɵmpd(4608, i4.Overlay, i4.Overlay, [i4.ScrollStrategyOptions, i4.OverlayContainer, i0.ComponentFactoryResolver, i4.OverlayPositionBuilder, i4.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i2.DOCUMENT, i5.Directionality, [2, i2.Location]]), i0.ɵmpd(5120, i4.ɵc, i4.ɵd, [i4.Overlay]), i0.ɵmpd(5120, i1.MAT_TOOLTIP_SCROLL_STRATEGY, i1.MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, [i4.Overlay]), i0.ɵmpd(4608, i6.HAMMER_GESTURE_CONFIG, i7.GestureConfig, [[2, i7.MAT_HAMMER_OPTIONS], [2, i7.MatCommonModule]]), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i8.PlatformModule, i8.PlatformModule, []), i0.ɵmpd(1073742336, i3.ObserversModule, i3.ObserversModule, []), i0.ɵmpd(1073742336, i9.A11yModule, i9.A11yModule, []), i0.ɵmpd(1073742336, i5.BidiModule, i5.BidiModule, []), i0.ɵmpd(1073742336, i10.PortalModule, i10.PortalModule, []), i0.ɵmpd(1073742336, i11.ScrollingModule, i11.ScrollingModule, []), i0.ɵmpd(1073742336, i4.OverlayModule, i4.OverlayModule, []), i0.ɵmpd(1073742336, i7.MatCommonModule, i7.MatCommonModule, [[2, i7.MATERIAL_SANITY_CHECKS], [2, i6.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i1.MatTooltipModule, i1.MatTooltipModule, []), i0.ɵmpd(256, i0.LOCALE_ID, \"en\", []), i0.ɵmpd(256, i0.TRANSLATIONS_FORMAT, \"xlf\", [])]); });\nexport { MatTooltipModuleNgFactory as MatTooltipModuleNgFactory };\nvar styles_TooltipComponent = [\".mat-tooltip-panel{pointer-events:none!important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}@media screen and (-ms-high-contrast:active){.mat-tooltip{outline:solid 1px}}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\"];\nvar RenderType_TooltipComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_TooltipComponent, data: { \"animation\": [{ type: 7, name: \"state\", definitions: [{ type: 0, name: \"initial, void, hidden\", styles: { type: 6, styles: { opacity: 0, transform: \"scale(0)\" }, offset: null }, options: undefined }, { type: 0, name: \"visible\", styles: { type: 6, styles: { transform: \"scale(1)\" }, offset: null }, options: undefined }, { type: 1, expr: \"* => visible\", animation: { type: 4, styles: { type: 5, steps: [{ type: 6, styles: { opacity: 0, transform: \"scale(0)\", offset: 0 }, offset: null }, { type: 6, styles: { opacity: 0.5, transform: \"scale(0.99)\", offset: 0.5 }, offset: null }, { type: 6, styles: { opacity: 1, transform: \"scale(1)\", offset: 1 }, offset: null }] }, timings: \"200ms cubic-bezier(0, 0, 0.2, 1)\" }, options: null }, { type: 1, expr: \"* => hidden\", animation: { type: 4, styles: { type: 6, styles: { opacity: 0 }, offset: null }, timings: \"100ms cubic-bezier(0, 0, 0.2, 1)\" }, options: null }], options: {} }] } });\nexport { RenderType_TooltipComponent as RenderType_TooltipComponent };\nexport function View_TooltipComponent_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 3, \"div\", [[\"class\", \"mat-tooltip\"]], [[2, \"mat-tooltip-handset\", null], [24, \"@state\", 0]], [[null, \"@state.start\"], [null, \"@state.done\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"@state.start\" === en)) {\n        var pd_0 = (_co._animationStart() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"@state.done\" === en)) {\n        var pd_1 = (_co._animationDone($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), i0.ɵdid(1, 278528, null, 0, i2.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i0.ɵpid(131072, i2.AsyncPipe, [i0.ChangeDetectorRef]), (_l()(), i0.ɵted(3, null, [\"\", \"\"]))], function (_ck, _v) { var _co = _v.component; var currVal_2 = \"mat-tooltip\"; var currVal_3 = _co.tooltipClass; _ck(_v, 1, 0, currVal_2, currVal_3); }, function (_ck, _v) { var _co = _v.component; var tmp_0_0 = null; var currVal_0 = (((tmp_0_0 = i0.ɵunv(_v, 0, 0, i0.ɵnov(_v, 2).transform(_co._isHandset))) == null) ? null : tmp_0_0.matches); var currVal_1 = _co._visibility; _ck(_v, 0, 0, currVal_0, currVal_1); var currVal_4 = _co.message; _ck(_v, 3, 0, currVal_4); }); }\nexport function View_TooltipComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-tooltip-component\", [[\"aria-hidden\", \"true\"]], [[4, \"zoom\", null]], [[\"body\", \"click\"]], function (_v, en, $event) { var ad = true; if ((\"body:click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 1)._handleBodyInteraction() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, View_TooltipComponent_0, RenderType_TooltipComponent)), i0.ɵdid(1, 49152, null, 0, i1.TooltipComponent, [i0.ChangeDetectorRef, i12.BreakpointObserver], null, null)], null, function (_ck, _v) { var currVal_0 = ((i0.ɵnov(_v, 1)._visibility === \"visible\") ? 1 : null); _ck(_v, 0, 0, currVal_0); }); }\nvar TooltipComponentNgFactory = i0.ɵccf(\"mat-tooltip-component\", i1.TooltipComponent, View_TooltipComponent_Host_0, {}, {}, []);\nexport { TooltipComponentNgFactory as TooltipComponentNgFactory };\n","<div class=\"mat-tooltip\" [ngClass]=\"tooltipClass\" [class.mat-tooltip-handset]=\"(_isHandset | async)?.matches\" [@state]=\"_visibility\" (@state.start)=\"_animationStart()\" (@state.done)=\"_animationDone($event)\">{{message}}</div>","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\nimport { __assign } from 'tslib';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { HAMMER_LOADER, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, ElementRef, Inject, InjectionToken, Input, NgZone, Optional, ViewContainerRef, ViewEncapsulation, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { GestureConfig, MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatTooltip.\n * \\@docs-private\n * @type {?}\n */\nvar matTooltipAnimations = {\n    /**\n     * Animation that transitions a tooltip in and out.\n     */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle repositioning after scroll events.\n * @type {?}\n */\nvar SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @type {?}\n */\nvar TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(\"Tooltip position \\\"\" + position + \"\\\" is invalid.\");\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n * @type {?}\n */\nvar MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS }); };\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nvar MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Injection token to be used to override the default options for `matTooltip`.\n * @type {?}\n */\nvar MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nvar MatTooltip = /** @class */ (function () {\n    function MatTooltip(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, hammerLoader) {\n        var _this = this;\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        /**\n         * The default delay in ms before showing the tooltip after show is called\n         */\n        this.showDelay = this._defaultOptions.showDelay;\n        /**\n         * The default delay in ms before hiding the tooltip after hide is called\n         */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        this._message = '';\n        this._manualListeners = new Map();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        this._scrollStrategy = scrollStrategy;\n        /** @type {?} */\n        var element = _elementRef.nativeElement;\n        /** @type {?} */\n        var elementStyle = (/** @type {?} */ (element.style));\n        /** @type {?} */\n        var hasGestures = typeof window === 'undefined' || ((/** @type {?} */ (window))).Hammer || hammerLoader;\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (!platform.IOS && !platform.ANDROID) {\n            this._manualListeners\n                .set('mouseenter', function () { return _this.show(); })\n                .set('mouseleave', function () { return _this.hide(); });\n        }\n        else if (!hasGestures) {\n            // If Hammerjs isn't loaded, fall back to showing on `touchstart`, otherwise\n            // there's no way for the user to trigger the tooltip on a touch device.\n            this._manualListeners.set('touchstart', function () { return _this.show(); });\n        }\n        this._manualListeners.forEach(function (listener, event) { return element.addEventListener(event, listener); });\n        if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n            // When we bind a gesture event on an element (in this case `longpress`), HammerJS\n            // will add some inline styles by default, including `user-select: none`. This is\n            // problematic on iOS and in Safari, because it will prevent users from typing in inputs.\n            // Since `user-select: none` is not needed for the `longpress` event and can cause unexpected\n            // behavior for text fields, we always clear the `user-select` to avoid such issues.\n            elementStyle.webkitUserSelect = elementStyle.userSelect = elementStyle.msUserSelect = '';\n        }\n        // Hammer applies `-webkit-user-drag: none` on all elements by default,\n        // which breaks the native drag&drop. If the consumer explicitly made\n        // the element draggable, clear the `-webkit-user-drag`.\n        if (element.draggable && elementStyle.webkitUserDrag === 'none') {\n            elementStyle.webkitUserDrag = '';\n        }\n        _focusMonitor.monitor(_elementRef).pipe(takeUntil(this._destroyed)).subscribe(function (origin) {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                _ngZone.run(function () { return _this.hide(0); });\n            }\n            else if (origin === 'keyboard') {\n                _ngZone.run(function () { return _this.show(); });\n            }\n        });\n    }\n    Object.defineProperty(MatTooltip.prototype, \"position\", {\n        /** Allows the user to define the position of the tooltip relative to the parent element */\n        get: /**\n         * Allows the user to define the position of the tooltip relative to the parent element\n         * @return {?}\n         */\n        function () { return this._position; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== this._position) {\n                this._position = value;\n                if (this._overlayRef) {\n                    this._updatePosition();\n                    if (this._tooltipInstance) {\n                        (/** @type {?} */ (this._tooltipInstance)).show(0);\n                    }\n                    this._overlayRef.updatePosition();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTooltip.prototype, \"disabled\", {\n        /** Disables the display of the tooltip. */\n        get: /**\n         * Disables the display of the tooltip.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            // If tooltip is disabled, hide immediately.\n            if (this._disabled) {\n                this.hide(0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTooltip.prototype, \"message\", {\n        /** The message to be displayed in the tooltip */\n        get: /**\n         * The message to be displayed in the tooltip\n         * @return {?}\n         */\n        function () { return this._message; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n            // If the message is not a string (e.g. number), convert it to a string and trim it.\n            this._message = value != null ? (\"\" + value).trim() : '';\n            if (!this._message && this._isTooltipVisible()) {\n                this.hide(0);\n            }\n            else {\n                this._updateTooltipMessage();\n                this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTooltip.prototype, \"tooltipClass\", {\n        /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n        get: /**\n         * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n         * @return {?}\n         */\n        function () { return this._tooltipClass; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._tooltipClass = value;\n            if (this._tooltipInstance) {\n                this._setTooltipClass(this._tooltipClass);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    MatTooltip.prototype.ngOnDestroy = /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._manualListeners.forEach(function (listener, event) {\n            _this._elementRef.nativeElement.removeEventListener(event, listener);\n        });\n        this._manualListeners.clear();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    };\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    MatTooltip.prototype.show = /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    function (delay) {\n        var _this = this;\n        if (delay === void 0) { delay = this.showDelay; }\n        if (this.disabled || !this.message || (this._isTooltipVisible() &&\n            !(/** @type {?} */ (this._tooltipInstance))._showTimeoutId && !(/** @type {?} */ (this._tooltipInstance))._hideTimeoutId)) {\n            return;\n        }\n        /** @type {?} */\n        var overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(function () { return _this._detach(); });\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        (/** @type {?} */ (this._tooltipInstance)).show(delay);\n    };\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    MatTooltip.prototype.hide = /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    function (delay) {\n        if (delay === void 0) { delay = this.hideDelay; }\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    };\n    /** Shows/hides the tooltip */\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    MatTooltip.prototype.toggle = /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    function () {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    };\n    /** Returns true if the tooltip is currently visible to the user */\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    MatTooltip.prototype._isTooltipVisible = /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    function () {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    };\n    /** Handles the keydown events on the host element. */\n    /**\n     * Handles the keydown events on the host element.\n     * @param {?} e\n     * @return {?}\n     */\n    MatTooltip.prototype._handleKeydown = /**\n     * Handles the keydown events on the host element.\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n            e.stopPropagation();\n            this.hide(0);\n        }\n    };\n    /** Handles the touchend events on the host element. */\n    /**\n     * Handles the touchend events on the host element.\n     * @return {?}\n     */\n    MatTooltip.prototype._handleTouchend = /**\n     * Handles the touchend events on the host element.\n     * @return {?}\n     */\n    function () {\n        this.hide(this._defaultOptions.touchendHideDelay);\n    };\n    /** Create the overlay config and position strategy */\n    /**\n     * Create the overlay config and position strategy\n     * @private\n     * @return {?}\n     */\n    MatTooltip.prototype._createOverlay = /**\n     * Create the overlay config and position strategy\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        // Create connected position strategy that listens for scroll events to reposition.\n        /** @type {?} */\n        var strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn('.mat-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8);\n        /** @type {?} */\n        var scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this._elementRef);\n        strategy.withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(function (change) {\n            if (_this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && _this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    _this._ngZone.run(function () { return _this.hide(0); });\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition();\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(function () { return _this._detach(); });\n        return this._overlayRef;\n    };\n    /** Detaches the currently-attached tooltip. */\n    /**\n     * Detaches the currently-attached tooltip.\n     * @private\n     * @return {?}\n     */\n    MatTooltip.prototype._detach = /**\n     * Detaches the currently-attached tooltip.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    };\n    /** Updates the position of the current tooltip. */\n    /**\n     * Updates the position of the current tooltip.\n     * @private\n     * @return {?}\n     */\n    MatTooltip.prototype._updatePosition = /**\n     * Updates the position of the current tooltip.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var position = (/** @type {?} */ ((/** @type {?} */ (this._overlayRef)).getConfig().positionStrategy));\n        /** @type {?} */\n        var origin = this._getOrigin();\n        /** @type {?} */\n        var overlay = this._getOverlayPosition();\n        position.withPositions([\n            __assign({}, origin.main, overlay.main),\n            __assign({}, origin.fallback, overlay.fallback)\n        ]);\n    };\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n    MatTooltip.prototype._getOrigin = /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        var position = this.position;\n        /** @type {?} */\n        var originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        var _a = this._invertPosition(originPosition.originX, originPosition.originY), x = _a.x, y = _a.y;\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    };\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    MatTooltip.prototype._getOverlayPosition = /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        var position = this.position;\n        /** @type {?} */\n        var overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        var _a = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY), x = _a.x, y = _a.y;\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    };\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @private\n     * @return {?}\n     */\n    MatTooltip.prototype._updateTooltipMessage = /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1), takeUntil(this._destroyed)).subscribe(function () {\n                if (_this._tooltipInstance) {\n                    (/** @type {?} */ (_this._overlayRef)).updatePosition();\n                }\n            });\n        }\n    };\n    /** Updates the tooltip class */\n    /**\n     * Updates the tooltip class\n     * @private\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    MatTooltip.prototype._setTooltipClass = /**\n     * Updates the tooltip class\n     * @private\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    function (tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    };\n    /** Inverts an overlay position. */\n    /**\n     * Inverts an overlay position.\n     * @private\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    MatTooltip.prototype._invertPosition = /**\n     * Inverts an overlay position.\n     * @private\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    function (x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x: x, y: y };\n    };\n    MatTooltip.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        '(longpress)': 'show()',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(touchend)': '_handleTouchend()',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTooltip.ctorParameters = function () { return [\n        { type: Overlay },\n        { type: ElementRef },\n        { type: ScrollDispatcher },\n        { type: ViewContainerRef },\n        { type: NgZone },\n        { type: Platform },\n        { type: AriaDescriber },\n        { type: FocusMonitor },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n    ]; };\n    MatTooltip.propDecorators = {\n        position: [{ type: Input, args: ['matTooltipPosition',] }],\n        disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n        showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n        hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n        message: [{ type: Input, args: ['matTooltip',] }],\n        tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n    };\n    return MatTooltip;\n}());\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nvar TooltipComponent = /** @class */ (function () {\n    function TooltipComponent(_changeDetectorRef, _breakpointObserver) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._breakpointObserver = _breakpointObserver;\n        /**\n         * Property watched by the animation framework to show or hide the tooltip\n         */\n        this._visibility = 'initial';\n        /**\n         * Whether interactions on the page should close the tooltip\n         */\n        this._closeOnInteraction = false;\n        /**\n         * Subject for notifying that the tooltip has been hidden from the view\n         */\n        this._onHide = new Subject();\n        /**\n         * Stream that emits whether the user has a handset-sized display.\n         */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    TooltipComponent.prototype.show = /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    function (delay) {\n        var _this = this;\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n            this._hideTimeoutId = null;\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout(function () {\n            _this._visibility = 'visible';\n            _this._showTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            _this._markForCheck();\n        }, delay);\n    };\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    TooltipComponent.prototype.hide = /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    function (delay) {\n        var _this = this;\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n        }\n        this._hideTimeoutId = setTimeout(function () {\n            _this._visibility = 'hidden';\n            _this._hideTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            _this._markForCheck();\n        }, delay);\n    };\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    TooltipComponent.prototype.afterHidden = /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    function () {\n        return this._onHide.asObservable();\n    };\n    /** Whether the tooltip is being displayed. */\n    /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    TooltipComponent.prototype.isVisible = /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    function () {\n        return this._visibility === 'visible';\n    };\n    /**\n     * @return {?}\n     */\n    TooltipComponent.prototype._animationStart = /**\n     * @return {?}\n     */\n    function () {\n        this._closeOnInteraction = false;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    TooltipComponent.prototype._animationDone = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var toState = (/** @type {?} */ (event.toState));\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    };\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     * @return {?}\n     */\n    TooltipComponent.prototype._handleBodyInteraction = /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     * @return {?}\n     */\n    function () {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    };\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    TooltipComponent.prototype._markForCheck = /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    function () {\n        this._changeDetectorRef.markForCheck();\n    };\n    TooltipComponent.decorators = [\n        { type: Component, args: [{selector: 'mat-tooltip-component',\n                    template: \"<div class=\\\"mat-tooltip\\\" [ngClass]=\\\"tooltipClass\\\" [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\" [@state]=\\\"_visibility\\\" (@state.start)=\\\"_animationStart()\\\" (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\",\n                    styles: [\".mat-tooltip-panel{pointer-events:none!important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}@media screen and (-ms-high-contrast:active){.mat-tooltip{outline:solid 1px}}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [matTooltipAnimations.tooltipState],\n                    host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                        '(body:click)': 'this._handleBodyInteraction()',\n                        'aria-hidden': 'true',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    TooltipComponent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: BreakpointObserver }\n    ]; };\n    return TooltipComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatTooltipModule = /** @class */ (function () {\n    function MatTooltipModule() {\n    }\n    MatTooltipModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        A11yModule,\n                        CommonModule,\n                        OverlayModule,\n                        MatCommonModule,\n                    ],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule],\n                    declarations: [MatTooltip, TooltipComponent],\n                    entryComponents: [TooltipComponent],\n                    providers: [\n                        MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER,\n                        { provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig },\n                    ]\n                },] },\n    ];\n    return MatTooltipModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatTooltipModule, getMatTooltipInvalidPositionError, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_TOOLTIP_DEFAULT_OPTIONS, MatTooltip, TooltipComponent, matTooltipAnimations };\n//# sourceMappingURL=tooltip.es5.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar nextHandle = 1;\nvar tasksByHandle = {};\nfunction runIfPresent(handle) {\n    var cb = tasksByHandle[handle];\n    if (cb) {\n        cb();\n    }\n}\nexport var Immediate = {\n    setImmediate: function (cb) {\n        var handle = nextHandle++;\n        tasksByHandle[handle] = cb;\n        Promise.resolve().then(function () { return runIfPresent(handle); });\n        return handle;\n    },\n    clearImmediate: function (handle) {\n        delete tasksByHandle[handle];\n    },\n};\n//# sourceMappingURL=Immediate.js.map\n","/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nvar AsapAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction));\nexport { AsapAction };\n//# sourceMappingURL=AsapAction.js.map\n","/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */\nimport { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport var asap = /*@__PURE__*/ new AsapScheduler(AsapAction);\n//# sourceMappingURL=asap.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar AsapScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler));\nexport { AsapScheduler };\n//# sourceMappingURL=AsapScheduler.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, Injectable, NgZone, defineInjectable, inject } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { asapScheduler, combineLatest, fromEventPattern, Subject } from 'rxjs';\nimport { debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar LayoutModule = /** @class */ (function () {\n    function LayoutModule() {\n    }\n    LayoutModule.decorators = [\n        { type: NgModule, args: [{},] },\n    ];\n    return LayoutModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Global registry for all dynamically-created, injected media queries.\n * @type {?}\n */\nvar mediaQueriesForWebkitCompatibility = new Set();\n/**\n * Style tag that holds all of the dynamically-created media queries.\n * @type {?}\n */\nvar mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\nvar MediaMatcher = /** @class */ (function () {\n    function MediaMatcher(platform) {\n        this.platform = platform;\n        this._matchMedia = this.platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    MediaMatcher.prototype.matchMedia = /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    function (query) {\n        if (this.platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    };\n    MediaMatcher.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    MediaMatcher.ctorParameters = function () { return [\n        { type: Platform }\n    ]; };\n    /** @nocollapse */ MediaMatcher.ngInjectableDef = defineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(inject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n    return MediaMatcher;\n}());\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            (/** @type {?} */ (document.head)).appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            ((/** @type {?} */ (mediaQueryStyleNode.sheet)))\n                .insertRule(\"@media \" + query + \" {.fx-query-test{ }}\", 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return (/** @type {?} */ ({\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: function () { },\n        removeListener: function () { }\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nvar BreakpointObserver = /** @class */ (function () {\n    function BreakpointObserver(mediaMatcher, zone) {\n        this.mediaMatcher = mediaMatcher;\n        this.zone = zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    BreakpointObserver.prototype.ngOnDestroy = /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    function () {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    };\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    BreakpointObserver.prototype.isMatched = /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    function (value) {\n        var _this = this;\n        /** @type {?} */\n        var queries = splitQueries(coerceArray(value));\n        return queries.some(function (mediaQuery) { return _this._registerQuery(mediaQuery).mql.matches; });\n    };\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    BreakpointObserver.prototype.observe = /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    function (value) {\n        var _this = this;\n        /** @type {?} */\n        var queries = splitQueries(coerceArray(value));\n        /** @type {?} */\n        var observables = queries.map(function (query) { return _this._registerQuery(query).observable; });\n        return combineLatest(observables).pipe(debounceTime(0, asapScheduler), map(function (breakpointStates) {\n            /** @type {?} */\n            var response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(function (state) {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            });\n            return response;\n        }));\n    };\n    /** Registers a specific query to be listened for. */\n    /**\n     * Registers a specific query to be listened for.\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n    BreakpointObserver.prototype._registerQuery = /**\n     * Registers a specific query to be listened for.\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n    function (query) {\n        var _this = this;\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return (/** @type {?} */ (this._queries.get(query)));\n        }\n        /** @type {?} */\n        var mql = this.mediaMatcher.matchMedia(query);\n        // TODO(jelbourn): change this `any` to `MediaQueryListEvent` once Google has upgraded to\n        // TypeScript 3.1 (the type is unavailable before then).\n        /** @type {?} */\n        var queryListener;\n        // Create callback for match changes and add it is as a listener.\n        /** @type {?} */\n        var queryObservable = fromEventPattern(\n        // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n        // back into the zone because matchMedia is only included in Zone.js by loading the\n        // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n        // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n        // patches it.\n        function (listener) {\n            queryListener = function (e) { return _this.zone.run(function () { return listener(e); }); };\n            mql.addListener(queryListener);\n        }, function () { return mql.removeListener(queryListener); })\n            .pipe(startWith(mql), map(function (nextMql) { return ({ query: query, matches: nextMql.matches }); }), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        /** @type {?} */\n        var output = { observable: queryObservable, mql: mql };\n        this._queries.set(query, output);\n        return output;\n    };\n    BreakpointObserver.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    BreakpointObserver.ctorParameters = function () { return [\n        { type: MediaMatcher },\n        { type: NgZone }\n    ]; };\n    /** @nocollapse */ BreakpointObserver.ngInjectableDef = defineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(inject(MediaMatcher), inject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n    return BreakpointObserver;\n}());\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map(function (query) { return query.split(','); })\n        .reduce(function (a1, a2) { return a1.concat(a2); })\n        .map(function (query) { return query.trim(); });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nvar Breakpoints = {\n    XSmall: '(max-width: 599.99px)',\n    Small: '(min-width: 600px) and (max-width: 959.99px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n        '(max-width: 959.99px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { LayoutModule, BreakpointObserver, Breakpoints, MediaMatcher };\n//# sourceMappingURL=layout.es5.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        return fromEventPattern(addHandler, removeHandler).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable(function (subscriber) {\n        var handler = function () {\n            var e = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                e[_i] = arguments[_i];\n            }\n            return subscriber.next(e.length === 1 ? e[0] : e);\n        };\n        var retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return function () { return removeHandler(handler, retValue); };\n    });\n}\n//# sourceMappingURL=fromEventPattern.js.map\n"],"sourceRoot":""}