{"version":3,"sources":["webpack:///./node_modules/@firebase/messaging/node_modules/tslib/tslib.es6.js.pre-build-optimizer.js","webpack:///./node_modules/@firebase/messaging/dist/index.esm.js.pre-build-optimizer.js"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","index_esm_a","MessageParameter","MessageType","ERROR_MAP","errorFactory","dist_index_cjs","DEFAULT_PUBLIC_VAPID_KEY","Uint8Array","ENDPOINT","isArrayBufferEqual","a","byteLength","viewA","DataView","viewB","getUint8","arrayBufferToBase64","arrayBuffer","uint8Version","btoa","String","fromCharCode","concat","__spread","toBase64","replace","index_esm_IidModel","IidModel","getToken","senderId","subscription","publicVapidKey","p256dh","auth","fcmSubscribeBody","applicationPubKey","headers","subscribeOptions","responseData","err_1","_a","getKey","endpoint","buffer","Headers","append","method","fetch","json","errorInfo","message","token","pushSet","updateToken","fcmToken","fcmPushSet","fcmUpdateBody","updateOptions","err_2","deleteToken","fcmUnsubscribeBody","unsubscribeOptions","err_3","base64ToArrayBuffer","base64String","base64","repeat","rawData","atob","outputArray","charCodeAt","index_esm_DbInterface","DbInterface","dbPromise","get","key","createTransaction","objectStore","getIndex","index","put","delete","closeDatabase","close","runRequest","mode","db","transaction","request","getDb","objectStoreName","promisify","oncomplete","onerror","_this","indexedDB","open","dbName","dbVersion","onsuccess","onupgradeneeded","event","onDbUpgrade","index_esm_TokenDetailsModel","_super","TokenDetailsModel","oldVersion","createObjectStore","keyPath","createIndex","unique","_event","objectStoreNames","contains","iidModel","openCursorRequest","openCursor","console","warn","cursor","tokenDetails","fcmSenderId","continue","deleteDatabase","handleDb","cleanV1","cursorRequest_1","newValue","createTime","Date","now","vapidKey","update","getTokenDetailsFromToken","validateInputs","getTokenDetailsFromSWScope","swScope","saveTokenDetails","details","input","ArrayBuffer","index_esm_VapidDetailsModel","VapidDetailsModel","getVapidFromSWScope","undefined","saveVapidDetails","deleteVapidDetails","SENDER_ID_OPTION_NAME","index_esm_BaseController","BaseController","app","options","messagingSenderId","tokenDetailsModel","vapidDetailsModel","INTERNAL","currentPermission","swReg","pushSubscription","getNotificationPermission_","getSWRegistration_","getPublicVapidKey_","getPushSubscription","scope","manageExistingToken","getNewToken","isEndpointEqual","isAuthEqual","isP256dhEqual","isTokenStillValid","deleteTokenFromDB","updatedToken","allDetails","e_1","registration","pushManager","getSubscription","unsubscribe","swRegistration","subscribe","userVisibleOnly","applicationServerKey","requestPermission","useServiceWorker","_registration","usePublicVapidKey","_b64PublicKey","onMessage","_nextOrObserver","_error","_completed","onTokenRefresh","setBackgroundMessageHandler","_callback","all","Notification","permission","getTokenDetailsModel","getVapidDetailsModel","getIidModel","index_esm_SwController","SwController","bgMessageHandler","self","addEventListener","onPush","onSubChange","onNotificationClick","waitUntil","onPush_","onSubChange_","onNotificationClick_","msgPayload","notificationDetails","notificationTitle","reg","actions","maxActions","data","err","hasVisibleClients_","sendMessageToWindowClients_","getNotificationData_","title","showNotification","link","windowClient","internalMsg","notification","action","stopImmediatePropagation","fcmOptions","click_action","getWindowClient_","clients","openWindow","focus","createNewMsg","NOTIFICATION_CLICKED","attemptToMessageClient_","notificationInformation","callback","url","parsedURL","clientList","suitableClient","URL","location","href","getClientList","client","postMessage","some","visibilityState","startsWith","PUSH_MSG_RECEIVED","map","vapidKeyFromDatabase","matchAll","type","includeUncontrolled","msgType","msgData","TYPE_OF_MSG","DATA","index_esm_WindowController","WindowController","registrationToUse","publicVapidKeyToUse","manifestCheckPromise","messageObserver","tokenRefreshObserver","onMessageInternal","observer","onTokenRefreshInternal","setupSWMessageListener_","manifestTag","manifestContent","document","querySelector","gcm_sender_id","manifestCheck","permissionResult","ServiceWorkerRegistration","publicKey","parsedKey","nextOrObserver","completed","waitForRegistrationToActivate_","serviceWorker","installing","waiting","active","state","stateChangeListener","removeEventListener","navigator","register","catch","browserErrorMessage","workerPageMessage","isSupported","PushSubscription","cookieEnabled","window","index_cjs_default","registerService"],"mappings":"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","file":"10.3336f33a6d701a7c22d7.js","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import firebase from '@firebase/app';\nimport { __spread, __awaiter, __generator, __extends, __assign } from 'tslib';\nimport { ErrorFactory, createSubscribe } from '@firebase/util';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_MAP = (_a = {},\r\n    _a[\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */] = 'This method is available in a Window context.',\r\n    _a[\"only-available-in-sw\" /* AVAILABLE_IN_SW */] = 'This method is available in a service worker context.',\r\n    _a[\"should-be-overriden\" /* SHOULD_BE_INHERITED */] = 'This method should be overriden by extended classes.',\r\n    _a[\"bad-sender-id\" /* BAD_SENDER_ID */] = \"Please ensure that 'messagingSenderId' is set \" +\r\n        'correctly in the options passed into firebase.initializeApp().',\r\n    _a[\"permission-default\" /* PERMISSION_DEFAULT */] = 'The required permissions were not granted and dismissed instead.',\r\n    _a[\"permission-blocked\" /* PERMISSION_BLOCKED */] = 'The required permissions were not granted and blocked instead.',\r\n    _a[\"unsupported-browser\" /* UNSUPPORTED_BROWSER */] = \"This browser doesn't support the API's \" +\r\n        'required to use the firebase SDK.',\r\n    _a[\"notifications-blocked\" /* NOTIFICATIONS_BLOCKED */] = 'Notifications have been blocked.',\r\n    _a[\"failed-serviceworker-registration\" /* FAILED_DEFAULT_REGISTRATION */] = 'We are unable to register the ' +\r\n        'default service worker. {$browserErrorMessage}',\r\n    _a[\"sw-registration-expected\" /* SW_REGISTRATION_EXPECTED */] = 'A service worker registration was the expected input.',\r\n    _a[\"get-subscription-failed\" /* GET_SUBSCRIPTION_FAILED */] = 'There was an error when trying to get ' +\r\n        'any existing Push Subscriptions.',\r\n    _a[\"invalid-saved-token\" /* INVALID_SAVED_TOKEN */] = 'Unable to access details of the saved token.',\r\n    _a[\"sw-reg-redundant\" /* SW_REG_REDUNDANT */] = 'The service worker being used for push was made redundant.',\r\n    _a[\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */] = 'A problem occured while subscribing the user to FCM: {$errorInfo}',\r\n    _a[\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */] = 'FCM returned no token when subscribing the user to push.',\r\n    _a[\"token-subscribe-no-push-set\" /* TOKEN_SUBSCRIBE_NO_PUSH_SET */] = 'FCM returned an invalid response when getting an FCM token.',\r\n    _a[\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */] = 'A problem occured while unsubscribing the ' +\r\n        'user from FCM: {$errorInfo}',\r\n    _a[\"token-update-failed\" /* TOKEN_UPDATE_FAILED */] = 'A problem occured while updating the user from FCM: {$errorInfo}',\r\n    _a[\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */] = 'FCM returned no token when updating the user to push.',\r\n    _a[\"use-sw-before-get-token\" /* USE_SW_BEFORE_GET_TOKEN */] = 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.',\r\n    _a[\"invalid-delete-token\" /* INVALID_DELETE_TOKEN */] = 'You must pass a valid token into ' +\r\n        'deleteToken(), i.e. the token from getToken().',\r\n    _a[\"delete-token-not-found\" /* DELETE_TOKEN_NOT_FOUND */] = 'The deletion attempt for token could not ' +\r\n        'be performed as the token was not found.',\r\n    _a[\"delete-scope-not-found\" /* DELETE_SCOPE_NOT_FOUND */] = 'The deletion attempt for service worker ' +\r\n        'scope could not be performed as the scope was not found.',\r\n    _a[\"bg-handler-function-expected\" /* BG_HANDLER_FUNCTION_EXPECTED */] = 'The input to setBackgroundMessageHandler() must be a function.',\r\n    _a[\"no-window-client-to-msg\" /* NO_WINDOW_CLIENT_TO_MSG */] = 'An attempt was made to message a non-existant window client.',\r\n    _a[\"unable-to-resubscribe\" /* UNABLE_TO_RESUBSCRIBE */] = 'There was an error while re-subscribing ' +\r\n        'the FCM token for push messaging. Will have to resubscribe the ' +\r\n        'user on next visit. {$errorInfo}',\r\n    _a[\"no-fcm-token-for-resubscribe\" /* NO_FCM_TOKEN_FOR_RESUBSCRIBE */] = 'Could not find an FCM token ' +\r\n        'and as a result, unable to resubscribe. Will have to resubscribe the ' +\r\n        'user on next visit.',\r\n    _a[\"failed-to-delete-token\" /* FAILED_TO_DELETE_TOKEN */] = 'Unable to delete the currently saved token.',\r\n    _a[\"no-sw-in-reg\" /* NO_SW_IN_REG */] = 'Even though the service worker registration was ' +\r\n        'successful, there was a problem accessing the service worker itself.',\r\n    _a[\"incorrect-gcm-sender-id\" /* INCORRECT_GCM_SENDER_ID */] = \"Please change your web app manifest's \" +\r\n        \"'gcm_sender_id' value to '103953800507' to use Firebase messaging.\",\r\n    _a[\"bad-scope\" /* BAD_SCOPE */] = 'The service worker scope must be a string with at ' +\r\n        'least one character.',\r\n    _a[\"bad-vapid-key\" /* BAD_VAPID_KEY */] = 'The public VAPID key is not a Uint8Array with 65 bytes.',\r\n    _a[\"bad-subscription\" /* BAD_SUBSCRIPTION */] = 'The subscription must be a valid PushSubscription.',\r\n    _a[\"bad-token\" /* BAD_TOKEN */] = 'The FCM Token used for storage / lookup was not ' +\r\n        'a valid token string.',\r\n    _a[\"bad-push-set\" /* BAD_PUSH_SET */] = 'The FCM push set used for storage / lookup was not ' +\r\n        'not a valid push set string.',\r\n    _a[\"failed-delete-vapid-key\" /* FAILED_DELETE_VAPID_KEY */] = 'The VAPID key could not be deleted.',\r\n    _a[\"invalid-public-vapid-key\" /* INVALID_PUBLIC_VAPID_KEY */] = 'The public VAPID key must be a string.',\r\n    _a[\"use-public-key-before-get-token\" /* USE_PUBLIC_KEY_BEFORE_GET_TOKEN */] = 'The usePublicVapidKey() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your VAPID key is used.',\r\n    _a[\"public-vapid-key-decryption-failed\" /* PUBLIC_KEY_DECRYPTION_FAILED */] = 'The public VAPID key did not equal 65 bytes when decrypted.',\r\n    _a);\r\nvar errorFactory = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_PUBLIC_VAPID_KEY = new Uint8Array([\r\n    0x04,\r\n    0x33,\r\n    0x94,\r\n    0xf7,\r\n    0xdf,\r\n    0xa1,\r\n    0xeb,\r\n    0xb1,\r\n    0xdc,\r\n    0x03,\r\n    0xa2,\r\n    0x5e,\r\n    0x15,\r\n    0x71,\r\n    0xdb,\r\n    0x48,\r\n    0xd3,\r\n    0x2e,\r\n    0xed,\r\n    0xed,\r\n    0xb2,\r\n    0x34,\r\n    0xdb,\r\n    0xb7,\r\n    0x47,\r\n    0x3a,\r\n    0x0c,\r\n    0x8f,\r\n    0xc4,\r\n    0xcc,\r\n    0xe1,\r\n    0x6f,\r\n    0x3c,\r\n    0x8c,\r\n    0x84,\r\n    0xdf,\r\n    0xab,\r\n    0xb6,\r\n    0x66,\r\n    0x3e,\r\n    0xf2,\r\n    0x0c,\r\n    0xd4,\r\n    0x8b,\r\n    0xfe,\r\n    0xe3,\r\n    0xf9,\r\n    0x76,\r\n    0x2f,\r\n    0x14,\r\n    0x1c,\r\n    0x63,\r\n    0x08,\r\n    0x6a,\r\n    0x6f,\r\n    0x2d,\r\n    0xb1,\r\n    0x1a,\r\n    0x95,\r\n    0xb0,\r\n    0xce,\r\n    0x37,\r\n    0xc0,\r\n    0x9c,\r\n    0x6e\r\n]);\r\nvar ENDPOINT = 'https://fcm.googleapis.com';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MessageParameter;\r\n(function (MessageParameter) {\r\n    MessageParameter[\"TYPE_OF_MSG\"] = \"firebase-messaging-msg-type\";\r\n    MessageParameter[\"DATA\"] = \"firebase-messaging-msg-data\";\r\n})(MessageParameter || (MessageParameter = {}));\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"PUSH_MSG_RECEIVED\"] = \"push-msg-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n})(MessageType || (MessageType = {}));\n\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isArrayBufferEqual(a, b) {\r\n    if (a == null || b == null) {\r\n        return false;\r\n    }\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (a.byteLength !== b.byteLength) {\r\n        return false;\r\n    }\r\n    var viewA = new DataView(a);\r\n    var viewB = new DataView(b);\r\n    for (var i = 0; i < a.byteLength; i++) {\r\n        if (viewA.getUint8(i) !== viewB.getUint8(i)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction toBase64(arrayBuffer) {\r\n    var uint8Version = new Uint8Array(arrayBuffer);\r\n    return btoa(String.fromCharCode.apply(String, __spread(uint8Version)));\r\n}\r\nfunction arrayBufferToBase64(arrayBuffer) {\r\n    var base64String = toBase64(arrayBuffer);\r\n    return base64String\r\n        .replace(/=/g, '')\r\n        .replace(/\\+/g, '-')\r\n        .replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar IidModel = /** @class */ (function () {\r\n    function IidModel() {\r\n    }\r\n    IidModel.prototype.getToken = function (senderId, subscription, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var p256dh, auth, fcmSubscribeBody, applicationPubKey, headers, subscribeOptions, responseData, response, err_1, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\r\n                        auth = arrayBufferToBase64(subscription.getKey('auth'));\r\n                        fcmSubscribeBody = \"authorized_entity=\" + senderId + \"&\" +\r\n                            (\"endpoint=\" + subscription.endpoint + \"&\") +\r\n                            (\"encryption_key=\" + p256dh + \"&\") +\r\n                            (\"encryption_auth=\" + auth);\r\n                        if (!isArrayBufferEqual(publicVapidKey.buffer, DEFAULT_PUBLIC_VAPID_KEY.buffer)) {\r\n                            applicationPubKey = arrayBufferToBase64(publicVapidKey);\r\n                            fcmSubscribeBody += \"&application_pub_key=\" + applicationPubKey;\r\n                        }\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        subscribeOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmSubscribeBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/subscribe', subscribeOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n                            errorInfo: err_1\r\n                        });\r\n                    case 5:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n                                errorInfo: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */);\r\n                        }\r\n                        if (!responseData.pushSet) {\r\n                            throw errorFactory.create(\"token-subscribe-no-push-set\" /* TOKEN_SUBSCRIBE_NO_PUSH_SET */);\r\n                        }\r\n                        return [2 /*return*/, {\r\n                                token: responseData.token,\r\n                                pushSet: responseData.pushSet\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Update the underlying token details for fcmToken.\r\n     */\r\n    IidModel.prototype.updateToken = function (senderId, fcmToken, fcmPushSet, subscription, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var p256dh, auth, fcmUpdateBody, applicationPubKey, headers, updateOptions, responseData, response, err_2, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\r\n                        auth = arrayBufferToBase64(subscription.getKey('auth'));\r\n                        fcmUpdateBody = \"push_set=\" + fcmPushSet + \"&\" +\r\n                            (\"token=\" + fcmToken + \"&\") +\r\n                            (\"authorized_entity=\" + senderId + \"&\") +\r\n                            (\"endpoint=\" + subscription.endpoint + \"&\") +\r\n                            (\"encryption_key=\" + p256dh + \"&\") +\r\n                            (\"encryption_auth=\" + auth);\r\n                        if (!isArrayBufferEqual(publicVapidKey.buffer, DEFAULT_PUBLIC_VAPID_KEY.buffer)) {\r\n                            applicationPubKey = arrayBufferToBase64(publicVapidKey);\r\n                            fcmUpdateBody += \"&application_pub_key=\" + applicationPubKey;\r\n                        }\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        updateOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmUpdateBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/subscribe', updateOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_2 = _a.sent();\r\n                        throw errorFactory.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n                            errorInfo: err_2\r\n                        });\r\n                    case 5:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n                                errorInfo: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */);\r\n                        }\r\n                        return [2 /*return*/, responseData.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given a fcmToken, pushSet and messagingSenderId, delete an FCM token.\r\n     */\r\n    IidModel.prototype.deleteToken = function (senderId, fcmToken, fcmPushSet) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var fcmUnsubscribeBody, headers, unsubscribeOptions, response, responseData, message, err_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        fcmUnsubscribeBody = \"authorized_entity=\" + senderId + \"&\" +\r\n                            (\"token=\" + fcmToken + \"&\") +\r\n                            (\"pushSet=\" + fcmPushSet);\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        unsubscribeOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmUnsubscribeBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/unsubscribe', unsubscribeOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                                errorInfo: message\r\n                            });\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_3 = _a.sent();\r\n                        throw errorFactory.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                            errorInfo: err_3\r\n                        });\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return IidModel;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction base64ToArrayBuffer(base64String) {\r\n    var padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n    var base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    var rawData = atob(base64);\r\n    var outputArray = new Uint8Array(rawData.length);\r\n    for (var i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OLD_DB_NAME = 'undefined';\r\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nfunction handleDb(db) {\r\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n        // We found a database with the name 'undefined', but our expected object\r\n        // store isn't defined.\r\n        return;\r\n    }\r\n    var transaction = db.transaction(OLD_OBJECT_STORE_NAME);\r\n    var objectStore = transaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n    var iidModel = new IidModel();\r\n    var openCursorRequest = objectStore.openCursor();\r\n    openCursorRequest.onerror = function (event) {\r\n        // NOOP - Nothing we can do.\r\n        console.warn('Unable to cleanup old IDB.', event);\r\n    };\r\n    openCursorRequest.onsuccess = function () {\r\n        var cursor = openCursorRequest.result;\r\n        if (cursor) {\r\n            // cursor.value contains the current record being iterated through\r\n            // this is where you'd do something with the result\r\n            var tokenDetails = cursor.value;\r\n            // tslint:disable-next-line:no-floating-promises\r\n            iidModel.deleteToken(tokenDetails.fcmSenderId, tokenDetails.fcmToken, tokenDetails.fcmPushSet);\r\n            cursor.continue();\r\n        }\r\n        else {\r\n            db.close();\r\n            indexedDB.deleteDatabase(OLD_DB_NAME);\r\n        }\r\n    };\r\n}\r\nfunction cleanV1() {\r\n    var request = indexedDB.open(OLD_DB_NAME);\r\n    request.onerror = function (_event) {\r\n        // NOOP - Nothing we can do.\r\n    };\r\n    request.onsuccess = function (_event) {\r\n        var db = request.result;\r\n        handleDb(db);\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DbInterface = /** @class */ (function () {\r\n    function DbInterface() {\r\n        this.dbPromise = null;\r\n    }\r\n    /** Gets record(s) from the objectStore that match the given key. */\r\n    DbInterface.prototype.get = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.get(key); });\r\n    };\r\n    /** Gets record(s) from the objectStore that match the given index. */\r\n    DbInterface.prototype.getIndex = function (index, key) {\r\n        function runRequest(objectStore) {\r\n            var idbIndex = objectStore.index(index);\r\n            return idbIndex.get(key);\r\n        }\r\n        return this.createTransaction(runRequest);\r\n    };\r\n    /** Assigns or overwrites the record for the given value. */\r\n    // IndexedDB values are of type \"any\"\r\n    DbInterface.prototype.put = function (value) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.put(value); }, 'readwrite');\r\n    };\r\n    /** Deletes record(s) from the objectStore that match the given key. */\r\n    DbInterface.prototype.delete = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.delete(key); }, 'readwrite');\r\n    };\r\n    /**\r\n     * Close the currently open database.\r\n     */\r\n    DbInterface.prototype.closeDatabase = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.dbPromise) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.dbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        db.close();\r\n                        this.dbPromise = null;\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates an IndexedDB Transaction and passes its objectStore to the\r\n     * runRequest function, which runs the database request.\r\n     *\r\n     * @return Promise that resolves with the result of the runRequest function\r\n     */\r\n    DbInterface.prototype.createTransaction = function (runRequest, mode) {\r\n        if (mode === void 0) { mode = 'readonly'; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db, transaction, request, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getDb()];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        transaction = db.transaction(this.objectStoreName, mode);\r\n                        request = transaction.objectStore(this.objectStoreName);\r\n                        return [4 /*yield*/, promisify(runRequest(request))];\r\n                    case 2:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                transaction.oncomplete = function () {\r\n                                    resolve(result);\r\n                                };\r\n                                transaction.onerror = function () {\r\n                                    reject(transaction.error);\r\n                                };\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Gets the cached db connection or opens a new one. */\r\n    DbInterface.prototype.getDb = function () {\r\n        var _this = this;\r\n        if (!this.dbPromise) {\r\n            this.dbPromise = new Promise(function (resolve, reject) {\r\n                var request = indexedDB.open(_this.dbName, _this.dbVersion);\r\n                request.onsuccess = function () {\r\n                    resolve(request.result);\r\n                };\r\n                request.onerror = function () {\r\n                    _this.dbPromise = null;\r\n                    reject(request.error);\r\n                };\r\n                request.onupgradeneeded = function (event) { return _this.onDbUpgrade(request, event); };\r\n            });\r\n        }\r\n        return this.dbPromise;\r\n    };\r\n    return DbInterface;\r\n}());\r\n/** Promisifies an IDBRequest. Resolves with the IDBRequest's result. */\r\nfunction promisify(request) {\r\n    return new Promise(function (resolve, reject) {\r\n        request.onsuccess = function () {\r\n            resolve(request.result);\r\n        };\r\n        request.onerror = function () {\r\n            reject(request.error);\r\n        };\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TokenDetailsModel = /** @class */ (function (_super) {\r\n    __extends(TokenDetailsModel, _super);\r\n    function TokenDetailsModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.dbName = 'fcm_token_details_db';\r\n        _this.dbVersion = 3;\r\n        _this.objectStoreName = 'fcm_token_object_Store';\r\n        return _this;\r\n    }\r\n    TokenDetailsModel.prototype.onDbUpgrade = function (request, event) {\r\n        var db = request.result;\r\n        // Lack of 'break' statements is intentional.\r\n        switch (event.oldVersion) {\r\n            case 0: {\r\n                // New IDB instance\r\n                var objectStore = db.createObjectStore(this.objectStoreName, {\r\n                    keyPath: 'swScope'\r\n                });\r\n                // Make sure the sender ID can be searched\r\n                objectStore.createIndex('fcmSenderId', 'fcmSenderId', {\r\n                    unique: false\r\n                });\r\n                objectStore.createIndex('fcmToken', 'fcmToken', { unique: true });\r\n            }\r\n            case 1: {\r\n                // Prior to version 2, we were using either 'fcm_token_details_db'\r\n                // or 'undefined' as the database name due to bug in the SDK\r\n                // So remove the old tokens and databases.\r\n                cleanV1();\r\n            }\r\n            case 2: {\r\n                var objectStore = request.transaction.objectStore(this.objectStoreName);\r\n                var cursorRequest_1 = objectStore.openCursor();\r\n                cursorRequest_1.onsuccess = function () {\r\n                    var cursor = cursorRequest_1.result;\r\n                    if (cursor) {\r\n                        var value = cursor.value;\r\n                        var newValue = __assign({}, value);\r\n                        if (!value.createTime) {\r\n                            newValue.createTime = Date.now();\r\n                        }\r\n                        if (typeof value.vapidKey === 'string') {\r\n                            newValue.vapidKey = base64ToArrayBuffer(value.vapidKey);\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.auth = base64ToArrayBuffer(value.auth).buffer;\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.p256dh = base64ToArrayBuffer(value.p256dh).buffer;\r\n                        }\r\n                        cursor.update(newValue);\r\n                        cursor.continue();\r\n                    }\r\n                };\r\n            }\r\n            default: // ignore\r\n        }\r\n    };\r\n    /**\r\n     * Given a token, this method will look up the details in indexedDB.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromToken = function (fcmToken) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!fcmToken) {\r\n                    throw errorFactory.create(\"bad-token\" /* BAD_TOKEN */);\r\n                }\r\n                validateInputs({ fcmToken: fcmToken });\r\n                return [2 /*return*/, this.getIndex('fcmToken', fcmToken)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the details in\r\n     * indexedDB.\r\n     * @return The details associated with that token.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromSWScope = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!swScope) {\r\n                    throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                }\r\n                validateInputs({ swScope: swScope });\r\n                return [2 /*return*/, this.get(swScope)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save the details for the fcm token for re-use at a later date.\r\n     * @param input A plain js object containing args to save.\r\n     */\r\n    TokenDetailsModel.prototype.saveTokenDetails = function (tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!tokenDetails.swScope) {\r\n                    throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                }\r\n                if (!tokenDetails.vapidKey) {\r\n                    throw errorFactory.create(\"bad-vapid-key\" /* BAD_VAPID_KEY */);\r\n                }\r\n                if (!tokenDetails.endpoint || !tokenDetails.auth || !tokenDetails.p256dh) {\r\n                    throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n                }\r\n                if (!tokenDetails.fcmSenderId) {\r\n                    throw errorFactory.create(\"bad-sender-id\" /* BAD_SENDER_ID */);\r\n                }\r\n                if (!tokenDetails.fcmToken) {\r\n                    throw errorFactory.create(\"bad-token\" /* BAD_TOKEN */);\r\n                }\r\n                if (!tokenDetails.fcmPushSet) {\r\n                    throw errorFactory.create(\"bad-push-set\" /* BAD_PUSH_SET */);\r\n                }\r\n                validateInputs(tokenDetails);\r\n                return [2 /*return*/, this.put(tokenDetails)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM token.\r\n     * It's returning a promise in case we need to move to an async\r\n     * method for deleting at a later date.\r\n     *\r\n     * @return Resolves once the FCM token details have been deleted and returns\r\n     * the deleted details.\r\n     */\r\n    TokenDetailsModel.prototype.deleteToken = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof token !== 'string' || token.length === 0) {\r\n                            return [2 /*return*/, Promise.reject(errorFactory.create(\"invalid-delete-token\" /* INVALID_DELETE_TOKEN */))];\r\n                        }\r\n                        return [4 /*yield*/, this.getTokenDetailsFromToken(token)];\r\n                    case 1:\r\n                        details = _a.sent();\r\n                        if (!details) {\r\n                            throw errorFactory.create(\"delete-token-not-found\" /* DELETE_TOKEN_NOT_FOUND */);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(details.swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, details];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return TokenDetailsModel;\r\n}(DbInterface));\r\n/**\r\n * This method takes an object and will check for known arguments and\r\n * validate the input.\r\n * @return Promise that resolves if input is valid, rejects otherwise.\r\n */\r\nfunction validateInputs(input) {\r\n    if (input.fcmToken) {\r\n        if (typeof input.fcmToken !== 'string' || input.fcmToken.length === 0) {\r\n            throw errorFactory.create(\"bad-token\" /* BAD_TOKEN */);\r\n        }\r\n    }\r\n    if (input.swScope) {\r\n        if (typeof input.swScope !== 'string' || input.swScope.length === 0) {\r\n            throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n        }\r\n    }\r\n    if (input.vapidKey) {\r\n        if (!(input.vapidKey instanceof Uint8Array) ||\r\n            input.vapidKey.length !== 65) {\r\n            throw errorFactory.create(\"bad-vapid-key\" /* BAD_VAPID_KEY */);\r\n        }\r\n    }\r\n    if (input.endpoint) {\r\n        if (typeof input.endpoint !== 'string' || input.endpoint.length === 0) {\r\n            throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n        }\r\n    }\r\n    if (input.auth) {\r\n        if (!(input.auth instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n        }\r\n    }\r\n    if (input.p256dh) {\r\n        if (!(input.p256dh instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n        }\r\n    }\r\n    if (input.fcmSenderId) {\r\n        if (typeof input.fcmSenderId !== 'string' ||\r\n            input.fcmSenderId.length === 0) {\r\n            throw errorFactory.create(\"bad-sender-id\" /* BAD_SENDER_ID */);\r\n        }\r\n    }\r\n    if (input.fcmPushSet) {\r\n        if (typeof input.fcmPushSet !== 'string' || input.fcmPushSet.length === 0) {\r\n            throw errorFactory.create(\"bad-push-set\" /* BAD_PUSH_SET */);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UNCOMPRESSED_PUBLIC_KEY_SIZE = 65;\r\nvar VapidDetailsModel = /** @class */ (function (_super) {\r\n    __extends(VapidDetailsModel, _super);\r\n    function VapidDetailsModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.dbName = 'fcm_vapid_details_db';\r\n        _this.dbVersion = 1;\r\n        _this.objectStoreName = 'fcm_vapid_object_Store';\r\n        return _this;\r\n    }\r\n    VapidDetailsModel.prototype.onDbUpgrade = function (request) {\r\n        var db = request.result;\r\n        db.createObjectStore(this.objectStoreName, { keyPath: 'swScope' });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the vapid key\r\n     * in indexedDB.\r\n     */\r\n    VapidDetailsModel.prototype.getVapidFromSWScope = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                            throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                        }\r\n                        return [4 /*yield*/, this.get(swScope)];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result ? result.vapidKey : undefined];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save a vapid key against a swScope for later date.\r\n     */\r\n    VapidDetailsModel.prototype.saveVapidDetails = function (swScope, vapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                    throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                }\r\n                if (vapidKey === null || vapidKey.length !== UNCOMPRESSED_PUBLIC_KEY_SIZE) {\r\n                    throw errorFactory.create(\"bad-vapid-key\" /* BAD_VAPID_KEY */);\r\n                }\r\n                details = {\r\n                    swScope: swScope,\r\n                    vapidKey: vapidKey\r\n                };\r\n                return [2 /*return*/, this.put(details)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM VAPID key for a SW scope.\r\n     * Resolves once the scope/vapid details have been deleted and returns the\r\n     * deleted vapid key.\r\n     */\r\n    VapidDetailsModel.prototype.deleteVapidDetails = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var vapidKey;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getVapidFromSWScope(swScope)];\r\n                    case 1:\r\n                        vapidKey = _a.sent();\r\n                        if (!vapidKey) {\r\n                            throw errorFactory.create(\"delete-scope-not-found\" /* DELETE_SCOPE_NOT_FOUND */);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, vapidKey];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return VapidDetailsModel;\r\n}(DbInterface));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SENDER_ID_OPTION_NAME = 'messagingSenderId';\r\n// Database cache should be invalidated once a week.\r\nvar TOKEN_EXPIRATION_MILLIS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nvar BaseController = /** @class */ (function () {\r\n    /**\r\n     * An interface of the Messaging Service API\r\n     */\r\n    function BaseController(app) {\r\n        var _this = this;\r\n        if (!app.options[SENDER_ID_OPTION_NAME] ||\r\n            typeof app.options[SENDER_ID_OPTION_NAME] !== 'string') {\r\n            throw errorFactory.create(\"bad-sender-id\" /* BAD_SENDER_ID */);\r\n        }\r\n        this.messagingSenderId = app.options[SENDER_ID_OPTION_NAME];\r\n        this.tokenDetailsModel = new TokenDetailsModel();\r\n        this.vapidDetailsModel = new VapidDetailsModel();\r\n        this.iidModel = new IidModel();\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: function () { return _this.delete(); }\r\n        };\r\n    }\r\n    /**\r\n     * @export\r\n     */\r\n    BaseController.prototype.getToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var currentPermission, swReg, publicVapidKey, pushSubscription, tokenDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        currentPermission = this.getNotificationPermission_();\r\n                        if (currentPermission === 'denied') {\r\n                            throw errorFactory.create(\"notifications-blocked\" /* NOTIFICATIONS_BLOCKED */);\r\n                        }\r\n                        else if (currentPermission !== 'granted') {\r\n                            // We must wait for permission to be granted\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        return [4 /*yield*/, this.getPublicVapidKey_()];\r\n                    case 2:\r\n                        publicVapidKey = _a.sent();\r\n                        return [4 /*yield*/, this.getPushSubscription(swReg, publicVapidKey)];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        return [4 /*yield*/, this.tokenDetailsModel.getTokenDetailsFromSWScope(swReg.scope)];\r\n                    case 4:\r\n                        tokenDetails = _a.sent();\r\n                        if (tokenDetails) {\r\n                            return [2 /*return*/, this.manageExistingToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                        }\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * manageExistingToken is triggered if there's an existing FCM token in the\r\n     * database and it can take 3 different actions:\r\n     * 1) Retrieve the existing FCM token from the database.\r\n     * 2) If VAPID details have changed: Delete the existing token and create a\r\n     * new one with the new VAPID key.\r\n     * 3) If the database cache is invalidated: Send a request to FCM to update\r\n     * the token, and to check if the token is still valid on FCM-side.\r\n     */\r\n    BaseController.prototype.manageExistingToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isTokenValid, now;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        isTokenValid = isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails);\r\n                        if (isTokenValid) {\r\n                            now = Date.now();\r\n                            if (now < tokenDetails.createTime + TOKEN_EXPIRATION_MILLIS) {\r\n                                return [2 /*return*/, tokenDetails.fcmToken];\r\n                            }\r\n                            else {\r\n                                return [2 /*return*/, this.updateToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                            }\r\n                        }\r\n                        // If the token is no longer valid (for example if the VAPID details\r\n                        // have changed), delete the existing token from the FCM client and server\r\n                        // database. No need to unsubscribe from the Service Worker as we have a\r\n                        // good push subscription that we'd like to use in getNewToken.\r\n                        return [4 /*yield*/, this.deleteTokenFromDB(tokenDetails.fcmToken)];\r\n                    case 1:\r\n                        // If the token is no longer valid (for example if the VAPID details\r\n                        // have changed), delete the existing token from the FCM client and server\r\n                        // database. No need to unsubscribe from the Service Worker as we have a\r\n                        // good push subscription that we'd like to use in getNewToken.\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BaseController.prototype.updateToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var updatedToken, allDetails, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 6]);\r\n                        return [4 /*yield*/, this.iidModel.updateToken(this.messagingSenderId, tokenDetails.fcmToken, tokenDetails.fcmPushSet, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        updatedToken = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.messagingSenderId,\r\n                            fcmToken: updatedToken,\r\n                            fcmPushSet: tokenDetails.fcmPushSet,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, updatedToken];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BaseController.prototype.getNewToken = function (swReg, pushSubscription, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokenDetails, allDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.iidModel.getToken(this.messagingSenderId, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        tokenDetails = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.messagingSenderId,\r\n                            fcmToken: tokenDetails.token,\r\n                            fcmPushSet: tokenDetails.pushSet,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, tokenDetails.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes tokens that the token manager looks after,\r\n     * unsubscribes the token from FCM  and then unregisters the push\r\n     * subscription if it exists. It returns a promise that indicates\r\n     * whether or not the unsubscribe request was processed successfully.\r\n     */\r\n    BaseController.prototype.deleteToken = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var registration, pushSubscription;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: \r\n                    // Delete the token details from the database.\r\n                    return [4 /*yield*/, this.deleteTokenFromDB(token)];\r\n                    case 1:\r\n                        // Delete the token details from the database.\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        registration = _a.sent();\r\n                        if (!registration) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        if (pushSubscription) {\r\n                            return [2 /*return*/, pushSubscription.unsubscribe()];\r\n                        }\r\n                        _a.label = 4;\r\n                    case 4: \r\n                    // If there's no SW, consider it a success.\r\n                    return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method will delete the token from the client database, and make a\r\n     * call to FCM to remove it from the server DB. Does not temper with the\r\n     * push subscription.\r\n     */\r\n    BaseController.prototype.deleteTokenFromDB = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.tokenDetailsModel.deleteToken(token)];\r\n                    case 1:\r\n                        details = _a.sent();\r\n                        return [4 /*yield*/, this.iidModel.deleteToken(details.fcmSenderId, details.fcmToken, details.fcmPushSet)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a PushSubscription for the current user.\r\n     */\r\n    BaseController.prototype.getPushSubscription = function (swRegistration, publicVapidKey) {\r\n        return swRegistration.pushManager.getSubscription().then(function (subscription) {\r\n            if (subscription) {\r\n                return subscription;\r\n            }\r\n            return swRegistration.pushManager.subscribe({\r\n                userVisibleOnly: true,\r\n                applicationServerKey: publicVapidKey\r\n            });\r\n        });\r\n    };\r\n    //\r\n    // The following methods should only be available in the window.\r\n    //\r\n    /**\r\n     * @deprecated Use Notification.requestPermission() instead.\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n     */\r\n    BaseController.prototype.requestPermission = function () {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.useServiceWorker = function (_registration) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.usePublicVapidKey = function (_b64PublicKey) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.onMessage = function (_nextOrObserver, _error, _completed) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.onTokenRefresh = function (_nextOrObserver, _error, _completed) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    //\r\n    // The following methods are used by the service worker only.\r\n    //\r\n    BaseController.prototype.setBackgroundMessageHandler = function (_callback) {\r\n        throw errorFactory.create(\"only-available-in-sw\" /* AVAILABLE_IN_SW */);\r\n    };\r\n    //\r\n    // The following methods are used by the service themselves and not exposed\r\n    // publicly or not expected to be used by developers.\r\n    //\r\n    /**\r\n     * This method is required to adhere to the Firebase interface.\r\n     * It closes any currently open indexdb database connections.\r\n     */\r\n    BaseController.prototype.delete = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.tokenDetailsModel.closeDatabase(),\r\n                            this.vapidDetailsModel.closeDatabase()\r\n                        ])];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns the current Notification Permission state.\r\n     */\r\n    BaseController.prototype.getNotificationPermission_ = function () {\r\n        return Notification.permission;\r\n    };\r\n    BaseController.prototype.getTokenDetailsModel = function () {\r\n        return this.tokenDetailsModel;\r\n    };\r\n    BaseController.prototype.getVapidDetailsModel = function () {\r\n        return this.vapidDetailsModel;\r\n    };\r\n    // Visible for testing\r\n    // TODO: make protected\r\n    BaseController.prototype.getIidModel = function () {\r\n        return this.iidModel;\r\n    };\r\n    return BaseController;\r\n}());\r\n/**\r\n * Checks if the tokenDetails match the details provided in the clients.\r\n */\r\nfunction isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails) {\r\n    if (!tokenDetails.vapidKey ||\r\n        !isArrayBufferEqual(publicVapidKey.buffer, tokenDetails.vapidKey.buffer)) {\r\n        return false;\r\n    }\r\n    var isEndpointEqual = pushSubscription.endpoint === tokenDetails.endpoint;\r\n    var isAuthEqual = isArrayBufferEqual(pushSubscription.getKey('auth'), tokenDetails.auth);\r\n    var isP256dhEqual = isArrayBufferEqual(pushSubscription.getKey('p256dh'), tokenDetails.p256dh);\r\n    return isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FCM_MSG = 'FCM_MSG';\r\nvar SwController = /** @class */ (function (_super) {\r\n    __extends(SwController, _super);\r\n    function SwController(app) {\r\n        var _this = _super.call(this, app) || this;\r\n        _this.bgMessageHandler = null;\r\n        self.addEventListener('push', function (e) {\r\n            _this.onPush(e);\r\n        });\r\n        self.addEventListener('pushsubscriptionchange', function (e) {\r\n            _this.onSubChange(e);\r\n        });\r\n        self.addEventListener('notificationclick', function (e) {\r\n            _this.onNotificationClick(e);\r\n        });\r\n        return _this;\r\n    }\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onPush = function (event) {\r\n        event.waitUntil(this.onPush_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onSubChange = function (event) {\r\n        event.waitUntil(this.onSubChange_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onNotificationClick = function (event) {\r\n        event.waitUntil(this.onNotificationClick_(event));\r\n    };\r\n    /**\r\n     * A handler for push events that shows notifications based on the content of\r\n     * the payload.\r\n     *\r\n     * The payload must be a JSON-encoded Object with a `notification` key. The\r\n     * value of the `notification` property will be used as the NotificationOptions\r\n     * object passed to showNotification. Additionally, the `title` property of the\r\n     * notification object will be used as the title.\r\n     *\r\n     * If there is no notification data in the payload then no notification will be\r\n     * shown.\r\n     */\r\n    SwController.prototype.onPush_ = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msgPayload, hasVisibleClients, notificationDetails, notificationTitle, reg, actions, maxActions;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.data) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        try {\r\n                            msgPayload = event.data.json();\r\n                        }\r\n                        catch (err) {\r\n                            // Not JSON so not an FCM message\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.hasVisibleClients_()];\r\n                    case 1:\r\n                        hasVisibleClients = _a.sent();\r\n                        if (hasVisibleClients) {\r\n                            // App in foreground. Send to page.\r\n                            return [2 /*return*/, this.sendMessageToWindowClients_(msgPayload)];\r\n                        }\r\n                        notificationDetails = this.getNotificationData_(msgPayload);\r\n                        if (!notificationDetails) return [3 /*break*/, 3];\r\n                        notificationTitle = notificationDetails.title || '';\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        reg = _a.sent();\r\n                        actions = notificationDetails.actions;\r\n                        maxActions = Notification.maxActions;\r\n                        // tslint:enable no-any\r\n                        if (actions && maxActions && actions.length > maxActions) {\r\n                            console.warn(\"This browser only supports \" + maxActions + \" actions.\" +\r\n                                \"The remaining actions will not be displayed.\");\r\n                        }\r\n                        return [2 /*return*/, reg.showNotification(notificationTitle, notificationDetails)];\r\n                    case 3:\r\n                        if (!this.bgMessageHandler) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.bgMessageHandler(msgPayload)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onSubChange_ = function (_event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var registration, err_1, err_2, tokenDetailsModel, tokenDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        registration = _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(\"unable-to-resubscribe\" /* UNABLE_TO_RESUBSCRIBE */, {\r\n                            errorInfo: err_1\r\n                        });\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 8]);\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 5:\r\n                        err_2 = _a.sent();\r\n                        tokenDetailsModel = this.getTokenDetailsModel();\r\n                        return [4 /*yield*/, tokenDetailsModel.getTokenDetailsFromSWScope(registration.scope)];\r\n                    case 6:\r\n                        tokenDetails = _a.sent();\r\n                        if (!tokenDetails) {\r\n                            // This should rarely occure, but could if indexedDB\r\n                            // is corrupted or wiped\r\n                            throw err_2;\r\n                        }\r\n                        // Attempt to delete the token if we know it's bad\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 7:\r\n                        // Attempt to delete the token if we know it's bad\r\n                        _a.sent();\r\n                        throw err_2;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onNotificationClick_ = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msgPayload, link, windowClient, internalMsg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.notification ||\r\n                            !event.notification.data ||\r\n                            !event.notification.data[FCM_MSG]) {\r\n                            // Not an FCM notification, do nothing.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (event.action) {\r\n                            // User clicked on an action button.\r\n                            // This will allow devs to act on action button clicks by using a custom\r\n                            // onNotificationClick listener that they define.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Prevent other listeners from receiving the event\r\n                        event.stopImmediatePropagation();\r\n                        event.notification.close();\r\n                        msgPayload = event.notification.data[FCM_MSG];\r\n                        if (!msgPayload.notification) {\r\n                            // Nothing to do.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        link = (msgPayload.fcmOptions && msgPayload.fcmOptions.link) ||\r\n                            msgPayload.notification.click_action;\r\n                        if (!link) {\r\n                            // Nothing to do.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.getWindowClient_(link)];\r\n                    case 1:\r\n                        windowClient = _a.sent();\r\n                        if (!!windowClient) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, self.clients.openWindow(link)];\r\n                    case 2:\r\n                        // Unable to find window client so need to open one.\r\n                        windowClient = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, windowClient.focus()];\r\n                    case 4:\r\n                        windowClient = _a.sent();\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        if (!windowClient) {\r\n                            // Window Client will not be returned if it's for a third party origin.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Delete notification and fcmOptions data from payload before sending to\r\n                        // the page.\r\n                        delete msgPayload.notification;\r\n                        delete msgPayload.fcmOptions;\r\n                        internalMsg = createNewMsg(MessageType.NOTIFICATION_CLICKED, msgPayload);\r\n                        // Attempt to send a message to the client to handle the data\r\n                        // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728\r\n                        return [2 /*return*/, this.attemptToMessageClient_(windowClient, internalMsg)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.getNotificationData_ = function (msgPayload) {\r\n        var _a;\r\n        if (!msgPayload) {\r\n            return;\r\n        }\r\n        if (typeof msgPayload.notification !== 'object') {\r\n            return;\r\n        }\r\n        var notificationInformation = __assign({}, msgPayload.notification);\r\n        // Put the message payload under FCM_MSG name so we can identify the\r\n        // notification as being an FCM notification vs a notification from\r\n        // somewhere else (i.e. normal web push or developer generated\r\n        // notification).\r\n        notificationInformation.data = __assign({}, msgPayload.notification.data, (_a = {}, _a[FCM_MSG] = msgPayload, _a));\r\n        return notificationInformation;\r\n    };\r\n    /**\r\n     * Calling setBackgroundMessageHandler will opt in to some specific\r\n     * behaviours.\r\n     * 1.) If a notification doesn't need to be shown due to a window already\r\n     * being visible, then push messages will be sent to the page.\r\n     * 2.) If a notification needs to be shown, and the message contains no\r\n     * notification data this method will be called\r\n     * and the promise it returns will be passed to event.waitUntil.\r\n     * If you do not set this callback then all push messages will let and the\r\n     * developer can handle them in a their own 'push' event callback\r\n     *\r\n     * @param callback The callback to be called when a push message is received\r\n     * and a notification must be shown. The callback will be given the data from\r\n     * the push message.\r\n     */\r\n    SwController.prototype.setBackgroundMessageHandler = function (callback) {\r\n        if (!callback || typeof callback !== 'function') {\r\n            throw errorFactory.create(\"bg-handler-function-expected\" /* BG_HANDLER_FUNCTION_EXPECTED */);\r\n        }\r\n        this.bgMessageHandler = callback;\r\n    };\r\n    /**\r\n     * @param url The URL to look for when focusing a client.\r\n     * @return Returns an existing window client or a newly opened WindowClient.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.getWindowClient_ = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parsedURL, clientList, suitableClient, i, parsedClientUrl;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        parsedURL = new URL(url, self.location.href).href;\r\n                        return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        suitableClient = null;\r\n                        for (i = 0; i < clientList.length; i++) {\r\n                            parsedClientUrl = new URL(clientList[i].url, self.location.href)\r\n                                .href;\r\n                            if (parsedClientUrl === parsedURL) {\r\n                                suitableClient = clientList[i];\r\n                                break;\r\n                            }\r\n                        }\r\n                        return [2 /*return*/, suitableClient];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This message will attempt to send the message to a window client.\r\n     * @param client The WindowClient to send the message to.\r\n     * @param message The message to send to the client.\r\n     * @returns Returns a promise that resolves after sending the message. This\r\n     * does not guarantee that the message was successfully received.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.attemptToMessageClient_ = function (client, message) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                // NOTE: This returns a promise in case this API is abstracted later on to\r\n                // do additional work\r\n                if (!client) {\r\n                    throw errorFactory.create(\"no-window-client-to-msg\" /* NO_WINDOW_CLIENT_TO_MSG */);\r\n                }\r\n                client.postMessage(message);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @returns If there is currently a visible WindowClient, this method will\r\n     * resolve to true, otherwise false.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.hasVisibleClients_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientList;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        return [2 /*return*/, clientList.some(function (client) {\r\n                                return client.visibilityState === 'visible' &&\r\n                                    // Ignore chrome-extension clients as that matches the background pages\r\n                                    // of extensions, which are always considered visible.\r\n                                    !client.url.startsWith('chrome-extension://');\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param msgPayload The data from the push event that should be sent to all\r\n     * available pages.\r\n     * @returns Returns a promise that resolves once the message has been sent to\r\n     * all WindowClients.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.sendMessageToWindowClients_ = function (msgPayload) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientList, internalMsg;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        internalMsg = createNewMsg(MessageType.PUSH_MSG_RECEIVED, msgPayload);\r\n                        return [4 /*yield*/, Promise.all(clientList.map(function (client) {\r\n                                return _this.attemptToMessageClient_(client, internalMsg);\r\n                            }))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration.\r\n     * @return he service worker registration to be used for the push service.\r\n     */\r\n    SwController.prototype.getSWRegistration_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, self.registration];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the\r\n     * public VAPID key provided by the developer.\r\n     */\r\n    SwController.prototype.getPublicVapidKey_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var swReg, vapidKeyFromDatabase;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        if (!swReg) {\r\n                            throw errorFactory.create(\"sw-registration-expected\" /* SW_REGISTRATION_EXPECTED */);\r\n                        }\r\n                        return [4 /*yield*/, this.getVapidDetailsModel().getVapidFromSWScope(swReg.scope)];\r\n                    case 2:\r\n                        vapidKeyFromDatabase = _a.sent();\r\n                        if (vapidKeyFromDatabase == null) {\r\n                            return [2 /*return*/, DEFAULT_PUBLIC_VAPID_KEY];\r\n                        }\r\n                        return [2 /*return*/, vapidKeyFromDatabase];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SwController;\r\n}(BaseController));\r\nfunction getClientList() {\r\n    return self.clients.matchAll({\r\n        type: 'window',\r\n        includeUncontrolled: true\r\n        // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\r\n    });\r\n}\r\nfunction createNewMsg(msgType, msgData) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[MessageParameter.TYPE_OF_MSG] = msgType,\r\n        _a[MessageParameter.DATA] = msgData,\r\n        _a;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\r\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WindowController = /** @class */ (function (_super) {\r\n    __extends(WindowController, _super);\r\n    /**\r\n     * A service that provides a MessagingService instance.\r\n     */\r\n    function WindowController(app) {\r\n        var _this = _super.call(this, app) || this;\r\n        _this.registrationToUse = null;\r\n        _this.publicVapidKeyToUse = null;\r\n        _this.manifestCheckPromise = null;\r\n        _this.messageObserver = null;\r\n        // @ts-ignore: Unused variable error, this is not implemented yet.\r\n        _this.tokenRefreshObserver = null;\r\n        _this.onMessageInternal = createSubscribe(function (observer) {\r\n            _this.messageObserver = observer;\r\n        });\r\n        _this.onTokenRefreshInternal = createSubscribe(function (observer) {\r\n            _this.tokenRefreshObserver = observer;\r\n        });\r\n        _this.setupSWMessageListener_();\r\n        return _this;\r\n    }\r\n    /**\r\n     * This method returns an FCM token if it can be generated.\r\n     * The return promise will reject if the browser doesn't support\r\n     * FCM, if permission is denied for notifications or it's not\r\n     * possible to generate a token.\r\n     *\r\n     * @return Returns a promise that resolves to an FCM token or null if\r\n     * permission isn't granted.\r\n     */\r\n    WindowController.prototype.getToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.manifestCheckPromise) {\r\n                            this.manifestCheckPromise = manifestCheck();\r\n                        }\r\n                        return [4 /*yield*/, this.manifestCheckPromise];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, _super.prototype.getToken.call(this)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Request permission if it is not currently granted\r\n     *\r\n     * @return Resolves if the permission was granted, otherwise rejects\r\n     *\r\n     * @deprecated Use Notification.requestPermission() instead.\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n     */\r\n    WindowController.prototype.requestPermission = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var permissionResult;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.getNotificationPermission_() === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, Notification.requestPermission()];\r\n                    case 1:\r\n                        permissionResult = _a.sent();\r\n                        if (permissionResult === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (permissionResult === 'denied') {\r\n                            throw errorFactory.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n                        }\r\n                        else {\r\n                            throw errorFactory.create(\"permission-default\" /* PERMISSION_DEFAULT */);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default service worker and\r\n     * instead use a custom service worker.\r\n     *\r\n     * @param registration The service worker registration that should be used to\r\n     * receive the push messages.\r\n     */\r\n    WindowController.prototype.useServiceWorker = function (registration) {\r\n        if (!(registration instanceof ServiceWorkerRegistration)) {\r\n            throw errorFactory.create(\"sw-registration-expected\" /* SW_REGISTRATION_EXPECTED */);\r\n        }\r\n        if (this.registrationToUse != null) {\r\n            throw errorFactory.create(\"use-sw-before-get-token\" /* USE_SW_BEFORE_GET_TOKEN */);\r\n        }\r\n        this.registrationToUse = registration;\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default vapid key\r\n     * and instead use a custom VAPID public key.\r\n     *\r\n     * @param publicKey A URL safe base64 encoded string.\r\n     */\r\n    WindowController.prototype.usePublicVapidKey = function (publicKey) {\r\n        if (typeof publicKey !== 'string') {\r\n            throw errorFactory.create(\"invalid-public-vapid-key\" /* INVALID_PUBLIC_VAPID_KEY */);\r\n        }\r\n        if (this.publicVapidKeyToUse != null) {\r\n            throw errorFactory.create(\"use-public-key-before-get-token\" /* USE_PUBLIC_KEY_BEFORE_GET_TOKEN */);\r\n        }\r\n        var parsedKey = base64ToArrayBuffer(publicKey);\r\n        if (parsedKey.length !== 65) {\r\n            throw errorFactory.create(\"public-vapid-key-decryption-failed\" /* PUBLIC_KEY_DECRYPTION_FAILED */);\r\n        }\r\n        this.publicVapidKeyToUse = parsedKey;\r\n    };\r\n    /**\r\n     * @export\r\n     * @param nextOrObserver An observer object or a function triggered on\r\n     * message.\r\n     * @param error A function triggered on message error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onMessage = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onMessageInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onMessageInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * @param nextOrObserver An observer object or a function triggered on token\r\n     * refresh.\r\n     * @param error A function triggered on token refresh error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onTokenRefresh = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onTokenRefreshInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onTokenRefreshInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * Given a registration, wait for the service worker it relates to\r\n     * become activer\r\n     * @param registration Registration to wait for service worker to become active\r\n     * @return Wait for service worker registration to become active\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.waitForRegistrationToActivate_ = function (registration) {\r\n        var serviceWorker = registration.installing || registration.waiting || registration.active;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!serviceWorker) {\r\n                // This is a rare scenario but has occured in firefox\r\n                reject(errorFactory.create(\"no-sw-in-reg\" /* NO_SW_IN_REG */));\r\n                return;\r\n            }\r\n            // Because the Promise function is called on next tick there is a\r\n            // small chance that the worker became active or redundant already.\r\n            if (serviceWorker.state === 'activated') {\r\n                resolve(registration);\r\n                return;\r\n            }\r\n            if (serviceWorker.state === 'redundant') {\r\n                reject(errorFactory.create(\"sw-reg-redundant\" /* SW_REG_REDUNDANT */));\r\n                return;\r\n            }\r\n            var stateChangeListener = function () {\r\n                if (serviceWorker.state === 'activated') {\r\n                    resolve(registration);\r\n                }\r\n                else if (serviceWorker.state === 'redundant') {\r\n                    reject(errorFactory.create(\"sw-reg-redundant\" /* SW_REG_REDUNDANT */));\r\n                }\r\n                else {\r\n                    // Return early and wait to next state change\r\n                    return;\r\n                }\r\n                serviceWorker.removeEventListener('statechange', stateChangeListener);\r\n            };\r\n            serviceWorker.addEventListener('statechange', stateChangeListener);\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration\r\n     * @return The service worker registration to be used for the push service.\r\n     */\r\n    WindowController.prototype.getSWRegistration_ = function () {\r\n        var _this = this;\r\n        if (this.registrationToUse) {\r\n            return this.waitForRegistrationToActivate_(this.registrationToUse);\r\n        }\r\n        // Make the registration null so we know useServiceWorker will not\r\n        // use a new service worker as registrationToUse is no longer undefined\r\n        this.registrationToUse = null;\r\n        return navigator.serviceWorker\r\n            .register(DEFAULT_SW_PATH, {\r\n            scope: DEFAULT_SW_SCOPE\r\n        })\r\n            .catch(function (err) {\r\n            throw errorFactory.create(\"failed-serviceworker-registration\" /* FAILED_DEFAULT_REGISTRATION */, {\r\n                browserErrorMessage: err.message\r\n            });\r\n        })\r\n            .then(function (registration) {\r\n            return _this.waitForRegistrationToActivate_(registration).then(function () {\r\n                _this.registrationToUse = registration;\r\n                // We update after activation due to an issue with Firefox v49 where\r\n                // a race condition occassionally causes the service worker to not\r\n                // install\r\n                // tslint:disable-next-line:no-floating-promises\r\n                registration.update();\r\n                return registration;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the public VAPID key\r\n     * provided by the developer.\r\n     */\r\n    WindowController.prototype.getPublicVapidKey_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.publicVapidKeyToUse) {\r\n                    return [2 /*return*/, this.publicVapidKeyToUse];\r\n                }\r\n                return [2 /*return*/, DEFAULT_PUBLIC_VAPID_KEY];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method will set up a message listener to handle\r\n     * events from the service worker that should trigger\r\n     * events in the page.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.setupSWMessageListener_ = function () {\r\n        var _this = this;\r\n        navigator.serviceWorker.addEventListener('message', function (event) {\r\n            if (!event.data || !event.data[MessageParameter.TYPE_OF_MSG]) {\r\n                // Not a message from FCM\r\n                return;\r\n            }\r\n            var workerPageMessage = event.data;\r\n            switch (workerPageMessage[MessageParameter.TYPE_OF_MSG]) {\r\n                case MessageType.PUSH_MSG_RECEIVED:\r\n                case MessageType.NOTIFICATION_CLICKED:\r\n                    var pushMessage = workerPageMessage[MessageParameter.DATA];\r\n                    if (_this.messageObserver) {\r\n                        _this.messageObserver.next(pushMessage);\r\n                    }\r\n                    break;\r\n                default:\r\n                    // Noop.\r\n                    break;\r\n            }\r\n        }, false);\r\n    };\r\n    return WindowController;\r\n}(BaseController));\r\n/**\r\n * The method checks that a manifest is defined and has the correct GCM\r\n * sender ID.\r\n * @return Returns a promise that resolves if the manifest matches\r\n * our required sender ID\r\n */\r\n// Exported for testing\r\nfunction manifestCheck() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var manifestTag, manifestContent, response, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    manifestTag = document.querySelector('link[rel=\"manifest\"]');\r\n                    if (!manifestTag) {\r\n                        return [2 /*return*/];\r\n                    }\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 4, , 5]);\r\n                    return [4 /*yield*/, fetch(manifestTag.href)];\r\n                case 2:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, response.json()];\r\n                case 3:\r\n                    manifestContent = _a.sent();\r\n                    return [3 /*break*/, 5];\r\n                case 4:\r\n                    e_1 = _a.sent();\r\n                    // If the download or parsing fails allow check.\r\n                    // We only want to error if we KNOW that the gcm_sender_id is incorrect.\r\n                    return [2 /*return*/];\r\n                case 5:\r\n                    if (!manifestContent || !manifestContent.gcm_sender_id) {\r\n                        return [2 /*return*/];\r\n                    }\r\n                    if (manifestContent.gcm_sender_id !== '103953800507') {\r\n                        throw errorFactory.create(\"incorrect-gcm-sender-id\" /* INCORRECT_GCM_SENDER_ID */);\r\n                    }\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerMessaging(instance) {\r\n    var messagingName = 'messaging';\r\n    var factoryMethod = function (app) {\r\n        if (!isSupported()) {\r\n            throw errorFactory.create(\"unsupported-browser\" /* UNSUPPORTED_BROWSER */);\r\n        }\r\n        if (self && 'ServiceWorkerGlobalScope' in self) {\r\n            // Running in ServiceWorker context\r\n            return new SwController(app);\r\n        }\r\n        else {\r\n            // Assume we are in the window context.\r\n            return new WindowController(app);\r\n        }\r\n    };\r\n    var namespaceExports = {\r\n        isSupported: isSupported\r\n    };\r\n    instance.INTERNAL.registerService(messagingName, factoryMethod, namespaceExports);\r\n}\r\nregisterMessaging(firebase);\r\nfunction isSupported() {\r\n    if (self && 'ServiceWorkerGlobalScope' in self) {\r\n        // Running in ServiceWorker context\r\n        return isSWControllerSupported();\r\n    }\r\n    else {\r\n        // Assume we are in the window context.\r\n        return isWindowControllerSupported();\r\n    }\r\n}\r\n/**\r\n * Checks to see if the required APIs exist.\r\n */\r\nfunction isWindowControllerSupported() {\r\n    return (navigator.cookieEnabled &&\r\n        'serviceWorker' in navigator &&\r\n        'PushManager' in window &&\r\n        'Notification' in window &&\r\n        'fetch' in window &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\r\n/**\r\n * Checks to see if the required APIs exist within SW Context.\r\n */\r\nfunction isSWControllerSupported() {\r\n    return ('PushManager' in self &&\r\n        'Notification' in self &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\n\nexport { isSupported, registerMessaging };\n//# sourceMappingURL=index.esm.js.map\n"],"sourceRoot":""}